stackoverflow.py

import requests
from bs4 import BeautifulSoup


stackoverflow_URL = f"https://stackoverflow.com/jobs?q=python"


def get_last_page():
  result = requests.get(stackoverflow_URL)
  soup=BeautifulSoup(result.text,"html.parser")

  pagination = soup.find("div", {"class":"s-pagination"})
  pages=pagination.find_all("a")
  last_pages=pages[-2].get_text(strip=True)
  return int(last_pages)


def extract_job(html):
  title=html.find("h2",{"class":"mb4"}).find("a")["title"]
  company_row=html.find("h3",{"class":"mb4"}).find_all("span")  <----- company 찾으러 갑시다~
  print(company_row)
  return{"title":title}




def extract_jobs(last_pages):
  jobs = []
  for page in range(last_pages):
    result=requests.get(f"{stackoverflow_URL}&pg={page+1}")
    soup=BeautifulSoup(result.text,"html.parser")
    results=soup.find_all("div", {"class":"-job"})
    for result in results:
      job = extract_job(result)
      jobs.append(job)
  return jobs


def get_jobs():
  last_page = get_last_page()
  jobs = extract_jobs(last_page)
  return jobs 
  
---------------------------
# 결과 : 너무 많이 나와서 중간에 강제 정지 시켰음. 어차피 규칙적으로 나오는거 같아서 인정
# 결과 값을 뜯어서 분석해보면

[<span>Sustainalytics                                       <----- 첫번째 /span이 회사고
                </span>, <span class="fc-black-500">
London, UK                </span>]                          <----- 번째 /span이 위치 일듯
.
.
.
.


                </span>, <span class="fc-black-500">
The Rocks, Australia                </span>]
[<span>LORENZ Life Sciences Group
                </span>, <span class="fc-black-500">
Frankfurt am Main, Germany                </span>]
[<span>Sustainalytics
                </span>, <span class="fc-black-500">
London, UK                </span>]
[<span>Warhorse Studios
                </span>, <span class="fc-black-500">
Praha 8, Czechia                </span>]
[<span>Behavox
                </span>, <span class="fc-black-500">
Montreal, QC, Canada                </span>]
[<span>Rialtic
                </span>, <span class="fc-black-500">
No office location                </span>]
[<span>Roon Labs LLC
                </span>, <span class="fc-black-500">
No office location                </span>]
[<span>Strive Health
                </span>, <span class="fc-black-500">
Denver, CO                </span>]
[<span>zeb.it
                </span>, <span class="fc-black-500">
Münster, Deutschland                </span>]
[<span>Amazon Web Services
                </span>, <span class="fc-black-500">
Tel Aviv-Yafo, Israel                </span>]
[<span>IOVLABS
                </span>, <span class="fc-black-500">
No office location                </span>]
[<span>jambit GmbH
                </span>, <span class="fc-black-500">
Leipzig, Deutschland                </span>]
[<span>UKG (Ultimate Kronos Group)
                </span>, <span class="fc-black-500">
No office location                </span>]
[<span>idealo internet GmbH
                </span>, <span class="fc-black-500">
Berlin, Deutschland                </span>]
[<span>Voice
                </span>, <span class="fc-black-500">
Brooklyn, NY                </span>]
[<span>Instrument Systems
                </span>, <span class="fc-black-500">
München, Deutschland                </span>]

